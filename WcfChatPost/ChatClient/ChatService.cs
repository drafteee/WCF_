//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfChatPost
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChatUser", Namespace="http://schemas.datacontract.org/2004/07/WcfChatPost")]
    public partial class ChatUser : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string UserNameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                this.UserNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChatMessage", Namespace="http://schemas.datacontract.org/2004/07/WcfChatPost")]
    public partial class ChatMessage : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime DateField;
        
        private string MessageField;
        
        private WcfChatPost.ChatUser UserField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WcfChatPost.ChatUser User
        {
            get
            {
                return this.UserField;
            }
            set
            {
                this.UserField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChatRoom", Namespace="http://schemas.datacontract.org/2004/07/WcfChatPost")]
    public partial class ChatRoom : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string NameRoomField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameRoom
        {
            get
            {
                return this.NameRoomField;
            }
            set
            {
                this.NameRoomField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IChatService", CallbackContract=typeof(IChatServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
public interface IChatService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/ClientConnect", ReplyAction="http://tempuri.org/IChatService/ClientConnectResponse")]
    WcfChatPost.ChatUser ClientConnect(string userName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/ClientConnect", ReplyAction="http://tempuri.org/IChatService/ClientConnectResponse")]
    System.Threading.Tasks.Task<WcfChatPost.ChatUser> ClientConnectAsync(string userName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/GetAllUserss", ReplyAction="http://tempuri.org/IChatService/GetAllUserssResponse")]
    WcfChatPost.ChatUser[] GetAllUserss();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/GetAllUserss", ReplyAction="http://tempuri.org/IChatService/GetAllUserssResponse")]
    System.Threading.Tasks.Task<WcfChatPost.ChatUser[]> GetAllUserssAsync();
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/SendNewMessage")]
    void SendNewMessage(WcfChatPost.ChatMessage newMessage, WcfChatPost.ChatRoom room);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/SendNewMessage")]
    System.Threading.Tasks.Task SendNewMessageAsync(WcfChatPost.ChatMessage newMessage, WcfChatPost.ChatRoom room);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/RemoveUser")]
    void RemoveUser(WcfChatPost.ChatUser user);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/RemoveUser")]
    System.Threading.Tasks.Task RemoveUserAsync(WcfChatPost.ChatUser user);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/CreateNewRoom", ReplyAction="http://tempuri.org/IChatService/CreateNewRoomResponse")]
    bool CreateNewRoom(WcfChatPost.ChatUser ourName, string[] users, WcfChatPost.ChatRoom nameRoom);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/CreateNewRoom", ReplyAction="http://tempuri.org/IChatService/CreateNewRoomResponse")]
    System.Threading.Tasks.Task<bool> CreateNewRoomAsync(WcfChatPost.ChatUser ourName, string[] users, WcfChatPost.ChatRoom nameRoom);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/ExitRoom")]
    void ExitRoom(WcfChatPost.ChatUser user, WcfChatPost.ChatRoom room);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/ExitRoom")]
    System.Threading.Tasks.Task ExitRoomAsync(WcfChatPost.ChatUser user, WcfChatPost.ChatRoom room);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/AddInRoom")]
    void AddInRoom(WcfChatPost.ChatUser user, WcfChatPost.ChatUser ourname, WcfChatPost.ChatRoom room);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/AddInRoom")]
    System.Threading.Tasks.Task AddInRoomAsync(WcfChatPost.ChatUser user, WcfChatPost.ChatUser ourname, WcfChatPost.ChatRoom room);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IChatServiceCallback
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/ConfirmUser", ReplyAction="http://tempuri.org/IChatService/ConfirmUserResponse")]
    bool ConfirmUser(WcfChatPost.ChatUser ourName);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/CreateRoom")]
    void CreateRoom(WcfChatPost.ChatUser ourName, WcfChatPost.ChatUser requiredName, WcfChatPost.ChatRoom nameRoom);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/UpdateUsers")]
    void UpdateUsers(WcfChatPost.ChatUser[] users);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/UpdateRooms")]
    void UpdateRooms(WcfChatPost.ChatRoom[] rooms);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/UpdateMsg")]
    void UpdateMsg(WcfChatPost.ChatMessage[] msgs);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/UpdateRoom", ReplyAction="http://tempuri.org/IChatService/UpdateRoomResponse")]
    WcfChatPost.ChatRoom UpdateRoom();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IChatServiceChannel : IChatService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ChatServiceClient : System.ServiceModel.DuplexClientBase<IChatService>, IChatService
{
    
    public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
            base(callbackInstance)
    {
    }
    
    public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
            base(callbackInstance, endpointConfigurationName)
    {
    }
    
    public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
            base(callbackInstance, endpointConfigurationName, remoteAddress)
    {
    }
    
    public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(callbackInstance, endpointConfigurationName, remoteAddress)
    {
    }
    
    public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(callbackInstance, binding, remoteAddress)
    {
    }
    
    public WcfChatPost.ChatUser ClientConnect(string userName)
    {
        return base.Channel.ClientConnect(userName);
    }
    
    public System.Threading.Tasks.Task<WcfChatPost.ChatUser> ClientConnectAsync(string userName)
    {
        return base.Channel.ClientConnectAsync(userName);
    }
    
    public WcfChatPost.ChatUser[] GetAllUserss()
    {
        return base.Channel.GetAllUserss();
    }
    
    public System.Threading.Tasks.Task<WcfChatPost.ChatUser[]> GetAllUserssAsync()
    {
        return base.Channel.GetAllUserssAsync();
    }
    
    public void SendNewMessage(WcfChatPost.ChatMessage newMessage, WcfChatPost.ChatRoom room)
    {
        base.Channel.SendNewMessage(newMessage, room);
    }
    
    public System.Threading.Tasks.Task SendNewMessageAsync(WcfChatPost.ChatMessage newMessage, WcfChatPost.ChatRoom room)
    {
        return base.Channel.SendNewMessageAsync(newMessage, room);
    }
    
    public void RemoveUser(WcfChatPost.ChatUser user)
    {
        base.Channel.RemoveUser(user);
    }
    
    public System.Threading.Tasks.Task RemoveUserAsync(WcfChatPost.ChatUser user)
    {
        return base.Channel.RemoveUserAsync(user);
    }
    
    public bool CreateNewRoom(WcfChatPost.ChatUser ourName, string[] users, WcfChatPost.ChatRoom nameRoom)
    {
        return base.Channel.CreateNewRoom(ourName, users, nameRoom);
    }
    
    public System.Threading.Tasks.Task<bool> CreateNewRoomAsync(WcfChatPost.ChatUser ourName, string[] users, WcfChatPost.ChatRoom nameRoom)
    {
        return base.Channel.CreateNewRoomAsync(ourName, users, nameRoom);
    }
    
    public void ExitRoom(WcfChatPost.ChatUser user, WcfChatPost.ChatRoom room)
    {
        base.Channel.ExitRoom(user, room);
    }
    
    public System.Threading.Tasks.Task ExitRoomAsync(WcfChatPost.ChatUser user, WcfChatPost.ChatRoom room)
    {
        return base.Channel.ExitRoomAsync(user, room);
    }
    
    public void AddInRoom(WcfChatPost.ChatUser user, WcfChatPost.ChatUser ourname, WcfChatPost.ChatRoom room)
    {
        base.Channel.AddInRoom(user, ourname, room);
    }
    
    public System.Threading.Tasks.Task AddInRoomAsync(WcfChatPost.ChatUser user, WcfChatPost.ChatUser ourname, WcfChatPost.ChatRoom room)
    {
        return base.Channel.AddInRoomAsync(user, ourname, room);
    }
}
